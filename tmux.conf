# Bind control to C-a, like in GNU screen.
unbind C-b
#set -g prefix C-a
set -g prefix 'C-\'
bind 'C-\' send-prefix

# C-a C-a sends the real C-a, like in screen.
bind-key 'C-\' last-window

# Start window indexing at one instead of zero
#set -g base-index 1

set-option -g base-index 1 

set-window-option -g pane-base-index 1

# shorten command delay
set -sg escape-time 1

# Speed up mode switching in Vim.
set -s escape-time 0

# Vi keys
set -g status-keys vi
setw -g mode-keys vi

# Of course.
set -g default-terminal "screen-256color"

# Big history.
set -g history-limit 10000

# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind | split-window -h
bind - split-window -v

# work with vim and lostfocus
set -g focus-events on

# map Vi movement keys as pane movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
 is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
# works with fzf
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
bind -n C-h run "($is_vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "($is_vim && tmux send-keys C-j)  || ($is_fzf && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) || ($is_fzf && tmux send-keys C-k)  || tmux select-pane -U"
bind -n C-l run  "($is_vim && tmux send-keys C-l) || tmux select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# resize panes using PREFIX H, J, K, L
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# THEME
set -g status-bg black
set -g status-fg white
set -g status-interval 60
set -g status-left-length 30
set -g status-left '#[fg=green](#S) #(whoami)@#H#[default]'
set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=blue]%H:%M#[default]'

# better copy paste more vim like
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection
# copy to clipboard
bind-key b run-shell "tmux show-buffer | /usr/bin/xclip -sel clip -i" \; display-message "Copied buffer to clipboard"

# quick keys for splitting
bind n split-window -v
bind v split-window -h

# Shift arrow to switch windows
#bind -n S-Left previous-window
#bind -n S-Right next-window 

if-shell "[ -f ~/.tmux_local.conf ]" 'source ~/.tmux_local.conf'

# Easy config reload
#bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."
