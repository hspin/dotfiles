# bash full template
snippet tpl "bash full template" b
#!/usr/bin/env bash

# Useful for debugging.{{{
set -o errexit
#(a.k.a. set -e) - to make your script exit when a command fails.
set -o nounset
# (a.k.a. set -u) # to exit when your script tries to use undeclared variables.
set -o pipefail
# to catch fails
# set -o xtrace
# (a.k.a set -x) # to trace what gets executed.}}}

# Set magic variables for current file & dir{{{
__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
__file="${__dir}/$(basename "${BASH_SOURCE[0]}")"
__base="$(basename ${__file} .sh)"
__root="$(cd "$(dirname "${__dir}")" && pwd)" # <-- change this as it depends on your app

arg1="\$\{1:-\}"
arg2="\$\{2:-\}"
#}}}

# Setup help menu{{{
help() {
  cat << EOF
usage: \$0 [OPTIONS]
    --help               Show this message
    --all                Download fzf binary and update configuration files
                         to enable key bindings and fuzzy completion
    --no-bash            Do not set up bash configuration
    --64                 Download 64-bit binary
EOF
}

auto_read=
for opt in "$@"; do
  case $opt in
    --help)
      help
      exit 0
      ;;
    --all)
      auto_read=1
      ;;
    --64)              echo "setting: amd64" ;;
    --no-bash)         echo "setting: no bash option" ;;
    *)
      if ! [[ "${auto_read}" = 1 ]]; then
        echo "unknown option: $opt"
        help
        exit 1
      fi
      ;;
  esac
done

# echo "${arg1}"
# echo "${arg2}"
#}}}

# ************************************
# ********** Main ********************
# ************************************
# setup up program as functions



# ************************************
# call function based on condition{{{
if [ $# -eq 0 ]
  then
    echo "No arguments supplied"
    echo "Running..."
    echo "Done"
    echo "Exiting"
    exit 1
fi

if [[ -z "${arg2}" && "${auto_read}" = 1 ]]; then
    echo "No modifier supplied"
    echo "running ALL solo"
    echo "Exiting"
    exit 1
else
    echo "running ALL with ${arg2}"
fi
#}}}

echo "Finished"

# vim: set ft=sh ts=2 sw=2 tw=500 fdm=marker fdl=0 fen :
endsnippet
